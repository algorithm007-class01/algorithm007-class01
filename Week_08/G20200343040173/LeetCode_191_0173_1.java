/**
191. 位1的个数
编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。

示例 1：

输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。
 
方法 1：循环和 1 的二进制不断左移

// 1 的二进制 0000 0000 0000 0000 0000 0000 0000 0001
// 比较下一位，左移一位
// 左移 1 次即为 0000 0000 0000 0000 0000 0000 0000 0010
// 任何数字跟掩码 1（1 的二进制）去「与」运算，都能获得这个数字的最低位。所以每次比较下一位时，左移掩码 1.

时间复杂度：O(1)
空间复杂度：O(1)
*/

public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int bits = 0;
        int mask = 1;
        for (int i =  0; i < 32; i++) {
            // 跟 1 做与运算，得到的都是这个数字本身。
            if ((n & mask) != 0) {
                bits++;
            }
            mask <<= 1;
        }
        return bits;
    }
}