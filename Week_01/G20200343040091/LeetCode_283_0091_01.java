  class Solution {

    public void moveZeroes(int[] nums) {
      // 笨办法,如果我看到一个零,我就把最后一个位置的数置成0,然后把下一个数组位置上的数字往前挪.

      // 数组长度大于1才开始进行操作,如果是0个元素,空数组不用操作.如果只有1个元素,也不用移动了.
      if (nums.length > 1) {
        for (int i = 0; i < nums.length; i++) {
          // 如果找到0
          if (0 == nums[i]) {

            // 1.把当前位置，后面的数字往前挪（最后一位不用挪）
            for (int j = i; j < nums.length - 1; j++) {
              nums[j] = nums[j + 1];
            }

            // 2.把0放到最后一个位置
            nums[nums.length - 1] = 0;

            // 3。当前i位置的数字需要再接受一次判断。因为现在这个位置放的是后面的一个数。（如果现在是100，然后i=1，就会一直重复在1这个位置上不断的判断死循环）
            if( 0 == nums[i]){
              // 如果当前位置的数字为0，需要判断后面所有的数字是不是全都是0，
              // ①如果全都是0，则结束，
              // ②如果有非0，则当前i还需要继续进行判断，进行挪位置。

              // 如果我发现当前i以及后面全是0，就不需要再处理了，直接退出for循环就可以了。
              for (int j = i + 1; j < nums.length; j++) {
                if (nums[j] != 0) {
                  // 如果后面还有需要挪动的非0数字，就继续。
                  i = i - 1;
                  break;
                }else{
                  // 如果后面没有发现非0数字
                  if (j == nums.length - 1) {
                    // 等到遍历到最后一个位置后发现也为0，让i指向最后一个位置，结束整个循环
                    i = nums.length - 1;
                  }
                }
              }

            }else{
              // 如果当前i位置挪上来的值不为0，则继续往后判断即可。
            }
          }
        }
      }
    }
  }
